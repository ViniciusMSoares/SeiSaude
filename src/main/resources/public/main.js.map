{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/elementos/cadastro-alimento/cadastro-alimento.component.html","webpack:///./src/app/elementos/cadastro-alimento/cadastro-alimento.component.scss","webpack:///./src/app/elementos/cadastro-alimento/cadastro-alimento.component.ts","webpack:///./src/app/elementos/cadastro-componente/cadastro-componente.component.html","webpack:///./src/app/elementos/cadastro-componente/cadastro-componente.component.scss","webpack:///./src/app/elementos/cadastro-componente/cadastro-componente.component.ts","webpack:///./src/app/elementos/cadastro-comportamento/cadastro-comportamento.component.html","webpack:///./src/app/elementos/cadastro-comportamento/cadastro-comportamento.component.scss","webpack:///./src/app/elementos/cadastro-comportamento/cadastro-comportamento.component.ts","webpack:///./src/app/elementos/cadastro-remedio/cadastro-remedio.component.html","webpack:///./src/app/elementos/cadastro-remedio/cadastro-remedio.component.scss","webpack:///./src/app/elementos/cadastro-remedio/cadastro-remedio.component.ts","webpack:///./src/app/elementos/componente/componente.component.html","webpack:///./src/app/elementos/componente/componente.component.scss","webpack:///./src/app/elementos/componente/componente.component.ts","webpack:///./src/app/elementos/consulta-componente/consulta-componente.component.html","webpack:///./src/app/elementos/consulta-componente/consulta-componente.component.scss","webpack:///./src/app/elementos/consulta-componente/consulta-componente.component.ts","webpack:///./src/app/elementos/consulta-elemento/consulta-elemento.component.html","webpack:///./src/app/elementos/consulta-elemento/consulta-elemento.component.scss","webpack:///./src/app/elementos/consulta-elemento/consulta-elemento.component.ts","webpack:///./src/app/elementos/edita-comportamento/edita-comportamento.component.html","webpack:///./src/app/elementos/edita-comportamento/edita-comportamento.component.scss","webpack:///./src/app/elementos/edita-comportamento/edita-comportamento.component.ts","webpack:///./src/app/elementos/elemento/elemento.component.html","webpack:///./src/app/elementos/elemento/elemento.component.scss","webpack:///./src/app/elementos/elemento/elemento.component.ts","webpack:///./src/app/elementos/elementos.module.ts","webpack:///./src/app/error-msg/error-msg.component.html","webpack:///./src/app/error-msg/error-msg.component.scss","webpack:///./src/app/error-msg/error-msg.component.ts","webpack:///./src/app/form-base/form-base.component.html","webpack:///./src/app/form-base/form-base.component.scss","webpack:///./src/app/form-base/form-base.component.ts","webpack:///./src/app/form-base/form-base.module.ts","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.scss","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.scss","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/services/verifica-nome/verifica-nome.service.ts","webpack:///./src/app/situacoes/cadastro-doenca/cadastro-doenca.component.html","webpack:///./src/app/situacoes/cadastro-doenca/cadastro-doenca.component.scss","webpack:///./src/app/situacoes/cadastro-doenca/cadastro-doenca.component.ts","webpack:///./src/app/situacoes/cadastro-sintoma/cadastro-sintoma.component.html","webpack:///./src/app/situacoes/cadastro-sintoma/cadastro-sintoma.component.scss","webpack:///./src/app/situacoes/cadastro-sintoma/cadastro-sintoma.component.ts","webpack:///./src/app/situacoes/consulta-situacao/consulta-situacao.component.html","webpack:///./src/app/situacoes/consulta-situacao/consulta-situacao.component.scss","webpack:///./src/app/situacoes/consulta-situacao/consulta-situacao.component.ts","webpack:///./src/app/situacoes/situacao/situacao.component.html","webpack:///./src/app/situacoes/situacao/situacao.component.scss","webpack:///./src/app/situacoes/situacao/situacao.component.ts","webpack:///./src/app/situacoes/situacoes.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/alimento.ts","webpack:///./src/models/componente.ts","webpack:///./src/models/comportamento.ts","webpack:///./src/models/doenca.ts","webpack:///./src/models/elemento.ts","webpack:///./src/models/remedio.ts","webpack:///./src/models/sintoma.ts","webpack:///./src/models/situacao.ts","webpack:///./src/models/url.enum.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAC8D;AACf;AACH;AACH;AACG;AACS;AACxC;AACwC;AACN;AACA;AAC1B;AACA;AACM;AAC0B;AAE5G,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,kHAAyB,EAAE;IACnE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+GAAwB,EAAE;IACjE,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,iIAA8B,EAAE;IAC7E,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+GAAwB,EAAE;IACjE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4GAAuB,EAAE;IAC/D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,wHAA2B,EAAE;IAEvE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,mHAAyB,EAAE;IACnE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,mHAAyB,EAAE;IACnE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,wHAA2B,EAAE;IAEvE,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yFAAiB,EAAE;IACxD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+FAAmB,EAAE;IAC5D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAExD,EAAE,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,yHAA2B,EAAC;IAE5E,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAiB,EAAE;CAC3C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1C7B,2M;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACyB;AACT;AACA;AACG;AACJ;AACN;AACY;AAyBpE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oFAAmB;gBACnB,iFAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,2EAAe;gBACf,2EAAe;gBACf,0EAAc;gBACd,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,0DAAW;gBACX,kEAAmB;aACpB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpCtB,qLAAqL,SAAS,8VAA8V,uvDAAuvD,usCAAusC,y7DAAy7D,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACA9hL,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACE;AAC4E;AAC9E;AACsB;AACzB;AAE0C;AACpD;AAGI;AAOzC;IAA+C,6CAAiB;IAQ9D,mCACU,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QAJhB,YAME,kBAAM,MAAM,CAAC,SACd;QANS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAT3C,WAAK,GAAG,sBAAsB,CAAC;QAC/B,cAAQ,GAAG,EAAc,CAAC;QAC1B,iBAAW,GAAG,EAAkB,CAAC;QACjC,aAAO,GAAG,EAAa,CAAC;QAiE/B,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACzE,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IA7DF,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACvD,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,IAAI,CAAC,gBAAgB,EAAE;YACpC,eAAe,EAAE,IAAI,CAAC,oBAAoB,EAAE;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,oDAAgB,GAAhB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,wDAAS,CAAC;YACrD,IAAI,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,OAAO,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxD,KAAK,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAAC,CAAC,EAHf,CAGe,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,wDAAoB,GAApB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,wDAAS,CAAC;YACjD,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAAC,CAAC,EAJpB,CAIoB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,0CAAM,GAAN;QAAA,iBAoBC;QAnBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,iBAAiB,CAAC;QAC/C,IAAI,QAAQ,GAAG,IAAI,yDAAQ,CACzB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,EACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,EACjC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,CACtC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC5C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EACD,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CACnC,CAAC;IACJ,CAAC;IAUD,sBAAI,kDAAW;aAAf,cAA+B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAc,CAAC,CAAC,CAAC;;;OAAA;IAExF,iDAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,wDAAS,CAAC;YAClC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,oDAAgB,GAAhB,UAAiB,CAAS;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,sBAAI,sDAAe;aAAnB,cAAmC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAc,CAAC,CAAC,CAAC;;;OAAA;IAEhG,qDAAiB,GAAjB;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,wDAAS,CAAC;YACtC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,wDAAoB,GAApB,UAAqB,CAAS;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAvGU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAUuB,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAZL,yBAAyB,CAyGrC;IAAD,gCAAC;CAAA,CAzG8C,gFAAiB,GAyG/D;AAzGqC;;;;;;;;;;;;AClBtC,gKAAgK,SAAS,8VAA8V,0sCAA0sC,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACA51D,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACsB;AACgC;AACtD;AACH;AACS;AACiC;AAEpD;AACI;AAOzC;IAAiD,+CAAiB;IAMhE,qCACU,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QAJhB,YAME,kBAAM,MAAM,CAAC,SACd;QANS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAP3C,WAAK,GAAG,wBAAwB,CAAC;QACjC,gBAAU,GAAG,EAAgB,CAAC;QAuCrC,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACnF,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IAnCF,CAAC;IAED,8CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACvD;SACA,CAAC,CAAC;IACL,CAAC;IAED,4CAAM,GAAN;QAAA,iBAeC;QAdC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,mBAAmB,CAAC;QACjD,IAAI,UAAU,GAAG,IAAI,6DAAU,CAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAC/C,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EACD,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CACnC,CAAC;IACJ,CAAC;IAxCU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAQuB,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAVL,2BAA2B,CAkDvC;IAAD,kCAAC;CAAA,CAlDgD,gFAAiB,GAkDjE;AAlDuC;;;;;;;;;;;;AChBxC,yMAAyM,SAAS,8VAA8V,wtDAAwtD,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACAn5E,+DAA+D,uM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACY;AACU;AAC0D;AAChF;AACH;AAC0C;AACpD;AAEI;AAOzC;IAAoD,kDAAiB;IAQnE,wCACU,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QAJhB,YAME,kBAAM,MAAM,CAAC,SACd;QANS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAT3C,WAAK,GAAG,2BAA2B,CAAC;QACpC,mBAAa,GAAG,EAAmB,CAAC;QACnC,oBAAc,GAAG,EAAqB,CAAC;QA+C/C,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACzE,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IA1CF,CAAC;IAED,iDAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACvD,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,+CAAM,GAAN;QAAA,iBAoBC;QAnBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,sBAAsB,CAAC;QACpD,IAAI,aAAa,GAAG,IAAI,mEAAa,CACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CACpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YACjD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EACD,UAAC,KAAU;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CACF,CAAC;IACJ,CAAC;IAUD,kDAAS,GAAT;QAAA,iBAeC;QAdC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC/B,IAAI,UAAU,GAAG,MAAe,CAAC;YACjC,sBAAsB;YACtB,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,mEAAa,CACzD,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,WAAW,EACb,CAAC,CAAC,SAAS,EACX,CAAC,CAAC,aAAa,CAChB,EALyC,CAKzC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACnC,CAAC,EACD,UAAC,KAAU,IAAK,YAAK,CAAC,MAAM,CAAC,EAAb,CAAa,CAC9B,CAAC;IACJ,CAAC;IA1EU,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;;;SAGvC,CAAC;yCAUuB,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAZL,8BAA8B,CA4E1C;IAAD,qCAAC;CAAA,CA5EmD,gFAAiB,GA4EpE;AA5E0C;;;;;;;;;;;;AChB3C,qLAAqL,SAAS,8VAA8V,2qDAA2qD,uyBAAuyB,GAAG,mnCAAmnC,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACA/uI,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACsB;AACwD;AAC9E;AACH;AACG;AACuC;AAEpD;AAEI;AACe;AAOxD;IAA8C,4CAAiB;IAQ7D,kCACU,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QAJhB,YAME,kBAAM,MAAM,CAAC,SACd;QANS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAT3C,WAAK,GAAG,qBAAqB,CAAC;QAC9B,aAAO,GAAG,EAAa,CAAC;QACxB,iBAAW,GAAG,EAAkB,CAAC;QACjC,mBAAa,GAAG,EAAkB,CAAC;QAiE1C,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACzE,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;QAeF,iBAAW,GAAa,EAAE,CAAC;QAC3B,sBAAgB,GAAa,EAAE,CAAC;QAChC,qBAAe,GAAG,KAAK,CAAC;;IA9ExB,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACvD,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,WAAW,EAAE,IAAI,CAAC,gBAAgB,EAAE;SACrC,CAAC,CAAC;QAEH,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,iBAAiB,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC/B,IAAI,UAAU,GAAG,MAAe,CAAC;YACjC,KAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,6DAAU,CACrD,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,WAAW,CACd,EAHwC,CAGxC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mDAAgB,GAAhB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,wDAAS,CAAC;YACrD,IAAI,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,IAAI,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,OAAO,CAAC;YACnC,KAAK,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,KAAK,CAAC;SAAC,CAAC,EAHM,CAGN,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,yCAAM,GAAN;QAAA,iBAmBC;QAlBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,gBAAgB,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,uDAAO,CACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,EACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAClC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EACD,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CACnC,CAAC;IACJ,CAAC;IAUD,sBAAI,iDAAW;aAAf,cAA+B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAc,CAAC,CAAC,CAAC;;;OAAA;IAExF,gDAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,wDAAS,CAAC;YAClC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,mDAAgB,GAAhB,UAAiB,CAAS;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAMD,0CAAO,GAAP,UAAQ,CAAS;QAAjB,iBAKC;QAJC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,EAAhE,CAAgE,CAAC,CAAC;QACtH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB;aACrC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAA9D,CAA8D,CAAC;aAC3E,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC;IAED,8CAAW,GAAX,UAAY,CAAS;QACnB,IAAI,CAAC,IAAI,IAAI,EAAE;YACb,OAAO,EAAE,CAAC;SACX;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED,8CAAW,GAAX,UAAY,CAAC,EAAE,MAAM;QACP,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnF,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,0CAAO,GAAP;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,wCAAK,GAAL;QACE,OAAO,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/D,CAAC;IA5HU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAUuB,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAZL,wBAAwB,CA8HpC;IAAD,+BAAC;CAAA,CA9H6C,gFAAiB,GA8H9D;AA9HoC;;;;;;;;;;;;AClBrC,sGAAsG,mBAAmB,UAAU,0BAA0B,kK;;;;;;;;;;;ACA7J,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAEO;AACK;AACf;AAO/C;IAKE,6BACU,KAAqB,EACrB,IAAgB,EAChB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QANjB,eAAU,GAAG,EAAgB,CAAC;QAC9B,cAAS,GAAG,KAAK,CAAC;IAMrB,CAAC;IAEL,sCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAAW;YACV,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAChD,KAAI,CAAC,UAAU,GAAG,MAAoB,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;gBAE7B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,IAAI,IAAI,CAAC;YAC3C,CAAC,CAAC,CAAC;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,mBAAmB,CAAC;QAEjD,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC;YACtB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAChD,CAAC;IApCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAOiB,8DAAc;YACf,+DAAU;YACR,sDAAM;OARb,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;;;;;ACXhC,gKAAgK,SAAS,2kBAA2kB,iDAAiD,qBAAqB,0BAA0B,oEAAoE,mBAAmB,gBAAgB,0BAA0B,yH;;;;;;;;;;;ACAr9B,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACM;AACM;AACf;AACF;AAC2B;AAC/B;AAOzC;IAAiD,+CAAiB;IAKhE,qCACU,WAAwB,EACxB,IAAgB,EACxB,MAAc;QAHhB,YAKE,kBAAM,MAAM,CAAC,SACd;QALS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QALnB,WAAK,GAAG,yBAAyB,CAAC;QAClC,iBAAW,GAAG,EAAkB,CAAC;;IAQxC,CAAC;IAED,8CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC,IAAI,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,4CAAM,GAAN;QAAA,iBAkBC;QAjBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,WAAW,CAAC;QACzC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAE9C,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC;YACvB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;YACxC,IAAI,UAAU,GAAG,MAAe,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,6DAAU,CACnD,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,WAAW,CACd,EAHsC,CAGtC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,EACD,UAAC,KAAU,IAAK,YAAK,CAAC,MAAM,CAAC,EAAb,CAAa,CAC9B,CAAC;IACJ,CAAC;IArCU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAOuB,0DAAW;YAClB,+DAAU;YAChB,sDAAM;OARL,2BAA2B,CAuCvC;IAAD,kCAAC;CAAA,CAvCgD,gFAAiB,GAuCjE;AAvCuC;;;;;;;;;;;;ACbxC,gKAAgK,SAAS,ukBAAukB,+CAA+C,mBAAmB,wBAAwB,oEAAoE,iBAAiB,gBAAgB,wBAAwB,yH;;;;;;;;;;;ACAv8B,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACsB;AAC3B;AACiB;AACf;AACK;AACX;AAOzC;IAA+C,6CAAiB;IAK9D,mCACU,WAAwB,EACxB,IAAgB,EACxB,MAAc;QAHhB,YAKE,kBAAM,MAAM,CAAC,SACd;QALS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QALnB,WAAK,GAAG,uBAAuB,CAAC;QAChC,eAAS,GAAG,EAAgB,CAAC;;IAQpC,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC,IAAI,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,0CAAM,GAAN;QAAA,iBAqBC;QApBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,SAAS,CAAC;QACvC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAE9C,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC;YACvB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;YACxC,IAAI,UAAU,GAAG,MAAe,CAAC;YACjC,sBAAsB;YACtB,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,yDAAQ,CAC/C,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,WAAW,EACb,CAAC,CAAC,SAAS,EACX,CAAC,CAAC,aAAa,EACf,CAAC,CAAC,EAAE,CACL,EANoC,CAMpC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC,EACD,UAAC,KAAU,IAAK,YAAK,CAAC,MAAM,CAAC,EAAb,CAAa,CAC9B,CAAC;IACJ,CAAC;IAxCU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAOuB,0DAAW;YAClB,+DAAU;YAChB,sDAAM;OARL,yBAAyB,CA0CrC;IAAD,gCAAC;CAAA,CA1C8C,gFAAiB,GA0C/D;AA1CqC;;;;;;;;;;;;ACbtC,yMAAyM,SAAS,o7CAAo7C,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACAjxD,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACY;AACU;AAC0D;AACpE;AACf;AAC0C;AACpD;AAEoB;AAMzD;IAAiD,+CAAiB;IAShE,qCACU,KAAqB,EACrB,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QALhB,YAOE,kBAAM,MAAM,CAAC,SACd;QAPS,WAAK,GAAL,KAAK,CAAgB;QACrB,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAX3C,WAAK,GAAG,4BAA4B,CAAC;QACrC,mBAAa,GAAG,EAAmB,CAAC;QACnC,oBAAc,GAAG,EAAqB,CAAC;QAGxC,eAAS,GAAG,KAAK,CAAC;QAyEzB,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACzE,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IArEF,CAAC;IAED,8CAAQ,GAAR;QAAA,iBA8BC;QA7BC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACvD,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAAW;YACV,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAChD,KAAI,CAAC,aAAa,GAAG,MAAuB,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;gBAEhC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,aAAa,IAAI,IAAI,CAAC;gBAE5C,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;oBACvB,YAAY,EAAE;wBACZ,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,IAAI;wBAC7B,WAAW,EAAE,KAAI,CAAC,aAAa,CAAC,WAAW;qBAC5C;oBACD,SAAS,EAAE,KAAI,CAAC,aAAa,CAAC,SAAS;oBACvC,aAAa,EAAE,KAAI,CAAC,aAAa,CAAC,aAAa;iBAChD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,qDAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,QAAQ,CAAC;QAEtC,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC;YACtB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,4CAAM,GAAN;QAAA,iBAkBC;QAjBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,sBAAsB,CAAC;QACpD,IAAI,aAAa,GAAG,IAAI,mEAAa,CACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CACpC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,CAAC,EACD,UAAC,KAAU;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CACF,CAAC;IACJ,CAAC;IAUD,+CAAS,GAAT;QAAA,iBAeC;QAdC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC/B,IAAI,UAAU,GAAG,MAAe,CAAC;YACjC,sBAAsB;YACtB,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,mEAAa,CACzD,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,WAAW,EACb,CAAC,CAAC,SAAS,EACX,CAAC,CAAC,aAAa,CAChB,EALyC,CAKzC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACnC,CAAC,EACD,UAAC,KAAU,IAAK,YAAK,CAAC,MAAM,CAAC,EAAb,CAAa,CAC9B,CAAC;IACJ,CAAC;IAvGU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAWiB,8DAAc;YACR,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAdL,2BAA2B,CAyGvC;IAAD,kCAAC;CAAA,CAzGgD,gFAAiB,GAyGjE;AAzGuC;;;;;;;;;;;;ACfxC,sGAAsG,iBAAiB,UAAU,wBAAwB,sGAAsG,sBAAsB,qP;;;;;;;;;;;ACArR,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AAEV;AACe;AAO9D;IAKE,2BACU,KAAqB,EACrB,IAAgB,EAChB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QANjB,aAAQ,GAAG,EAAc,CAAC;QAC1B,cAAS,GAAG,KAAK,CAAC;IAMrB,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAAW;YACV,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAChD,KAAI,CAAC,QAAQ,GAAG,MAAkB,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAE3B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACzC,CAAC,CAAC,CAAC;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2CAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,QAAQ,CAAC;QAEtC,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC;YACtB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,0CAAc,GAAd;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC;IAC1E,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAxCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOiB,8DAAc;YACf,+DAAU;YACR,sDAAM;OARb,iBAAiB,CA0C7B;IAAD,wBAAC;CAAA;AA1C6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AAE4D;AAClD;AACmC;AAC1B;AACV;AACiC;AACS;AACA;AACN;AAC1B;AACM;AACT;AACmC;AAyBlG;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAvB3B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uHAA8B;gBAC9B,wGAAyB;gBACzB,qGAAwB;gBACxB,8GAA2B;gBAC3B,8GAA2B;gBAC3B,yGAAyB;gBACzB,+EAAiB;gBACjB,qFAAmB;gBACnB,+GAA2B;aAC5B;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,oEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,2EAAc;aACf;YACD,OAAO,EAAE,EACR;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxC5B,gPAAgP,gBAAgB,gQAAgQ,iBAAiB,0B;;;;;;;;;;;ACAjhB,6BAA6B,uBAAuB,EAAE,+CAA+C,+X;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5C;AACZ;AACJ;AAOzC;IAOE,2BAAoB,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;0BAP7B,iBAAiB;IAS5B,oCAAQ,GAAR;IACA,CAAC;IAED,sBAAI,2CAAY;aAAhB;YAEE,KAAK,IAAM,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;oBAClD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACjC,OAAO,mBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;iBACnG;aACJ;YAED,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEM,6BAAW,GAAlB,UAAmB,SAAiB,EAAE,aAAqB,EAAE,cAAoB;QAC/E,IAAM,MAAM,GAAG;YACb,UAAU,EAAK,SAAS,8BAAiB;YACzC,cAAc,EAAK,SAAS,yEAA4D;YACxF,WAAW,EAAK,SAAS,oCAA0B,cAAc,CAAC,cAAc,iBAAc;YAC9F,WAAW,EAAK,SAAS,oCAA0B,cAAc,CAAC,cAAc,iBAAc;YAC9F,SAAS,EAAE,gBAAgB;SAC5B,CAAC;QAEF,OAAO,MAAM,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAED,sBAAI,4CAAa;aAAjB;YACE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,SAAS,EAAE;gBACpC,OAAO,mBAAmB;aAC3B;iBACI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,EAAE;gBACvC,OAAO,cAAc;aACtB;YAED,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAED,sBAAI,2CAAY;aAAhB;YACE,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI;gBAAE,OAAO,KAAK,CAAC;;gBAC/C,OAAO,IAAI,CAAC;QACnB,CAAC;;;OAAA;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAuB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,IAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,EAAE,CAAE,CAAC,CAAC,CAAC;IAChI,CAAC;;IArDQ;QAAR,2DAAK,EAAE;kCAAU,0DAAW;sDAAC;IACrB;QAAR,2DAAK,EAAE;;oDAAe;IAEd;QAAR,2DAAK,EAAE;;sDAAiB;IALd,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAQ6B,sDAAM;OAPxB,iBAAiB,CAyD7B;IAAD,wBAAC;CAAA;AAzD6B;;;;;;;;;;;;ACT9B,kD;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACI;AACb;AAOzC;IAIE,2BACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,oCAAQ,GAAR;IACA,CAAC;IAID,oCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,kDAAsB,GAAtB,UAAuB,SAAgC;QAAvD,iBASC;QARC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;YAC3C,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACtC,QAAQ,CAAC,WAAW,EAAE,CAAC;YACvB,QAAQ,CAAC,aAAa,EAAE,CAAC;YACzB,IAAI,QAAQ,YAAY,wDAAS,IAAI,QAAQ,YAAY,wDAAS,EAAE;gBAClE,KAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,gDAAoB,GAApB,UAAqB,KAAa;QAChC,OAAO,CACL,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;YACjC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CACzE,CAAC;IACJ,CAAC;IAED,4CAAgB,GAAhB,UAAiB,KAAa;QAC5B,OAAO,CACL,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC/C,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CACzE,CAAC;IACJ,CAAC;IAED,yCAAa,GAAb,UAAc,KAAa;QACzB,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAC7C,cAAc,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;SACjD,CAAC;IACJ,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IA7DmB,iBAAiB;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAMkB,sDAAM;OALJ,iBAAiB,CA+DtC;IAAD,wBAAC;CAAA;AA/DsC;;;;;;;;;;;;;;;;;;;;;;;;;ACTE;AACM;AACmB;AACG;AAerE;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAb1B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,gFAAiB;aAClB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;aACpB;YACD,OAAO,EAAE;gBACP,gFAAiB;aAClB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;AClB3B,0G;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,49BAA49B,iBAAiB,MAAM,iBAAiB,ufAAuf,mBAAmB,MAAM,mBAAmB,ifAAif,iBAAiB,MAAM,iBAAiB,uG;;;;;;;;;;;ACAhkE,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAQlD;IAmBE;QAjBA,qDAAqD;QACrD,cAAS,GAAS,CAAC,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,wBAAwB,EAAC;YACvD,EAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,mBAAmB,EAAC;YAC7C,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,kBAAkB,EAAC;YAC3C,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,qBAAqB,EAAC;YACjD,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,kBAAkB,EAAC;YAC3C,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAC;YACzC,EAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,EAAC;YAC7B,EAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;QAEjD,cAAS,GAAS,CAAC,EAAC,IAAI,EAAE,oCAAoC,EAAE,IAAI,EAAE,mBAAmB,EAAC;YACvE,EAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,mBAAmB,EAAC;YACrD,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,qBAAqB,EAAC,CAAC,CAAC;QAEtE,gBAAW,GAAS,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAC;YACxB,EAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;IAEtC,CAAC;IAElB,sCAAQ,GAAR;IACA,CAAC;IAtBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAwB/B;IAAD,0BAAC;CAAA;AAxB+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRW;AACO;AACH;AACE;AAKjD;IAEE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,2CAAa,GAAb,UAAc,IAAY,EAAE,WAAmB;QAC7C,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,GAAG,EAAE,CAAC;SACX;QACD,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,WAAW,GAAG,EAAE,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAG,CAAC,QAAQ,GAAC,oDAAG,CAAC,eAAe,CAAC;aACnD,IAAI,CACH,4DAAK,CAAC,IAAI,CAAC,EACX,0DAAG,CAAC,UAAC,KAA4C,IAAK,YAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAnH,CAAmH,CAAC,EAAtI,CAAsI,CAAC,EAC7L,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAChB,0DAAG,CAAC,UAAC,KAAY,IAAK,YAAK,CAAC,MAAM,GAAG,CAAC,EAAhB,CAAgB,CAAE,EACxC,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CACjB,CAAC;IACN,CAAC;IAED,mDAAqB,GAArB,UAAsB,IAAY,EAAE,WAAmB;QACrD,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,GAAG,EAAE,CAAC;SACX;QACD,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,WAAW,GAAG,EAAE,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAG,CAAC,QAAQ,GAAC,oDAAG,CAAC,eAAe,CAAC;aACnD,IAAI,CACH,4DAAK,CAAC,IAAI,CAAC,EACX,0DAAG,CAAC,UAAC,KAA4C,IAAK,YAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAnH,CAAmH,CAAC,EAAtI,CAAsI,CAAC,EAC7L,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAChB,0DAAG,CAAC,UAAC,KAAY,IAAK,YAAK,CAAC,MAAM,GAAG,CAAC,EAAhB,CAAgB,CAAE,EACxC,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CACjB,CAAC;IACN,CAAC;IAED,qDAAuB,GAAvB,UAAwB,IAAY,EAAE,WAAmB;QACvD,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,GAAG,EAAE,CAAC;SACX;QACD,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,WAAW,GAAG,EAAE,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAG,CAAC,QAAQ,GAAC,oDAAG,CAAC,iBAAiB,CAAC;aACrD,IAAI,CACH,4DAAK,CAAC,IAAI,CAAC,EACX,0DAAG,CAAC,UAAC,KAA4C,IAAK,YAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAnH,CAAmH,CAAE,EAAvI,CAAuI,CAAC,EAC9L,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAChB,0DAAG,CAAC,UAAC,KAAY,IAAK,YAAK,CAAC,MAAM,GAAG,CAAC,EAAhB,CAAgB,CAAE,EACxC,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CACjB,CAAC;IACN,CAAC;IArDU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,mBAAmB,CAsD/B;IAAD,0BAAC;CAAA;AAtD+B;;;;;;;;;;;;ACRhC,gKAAgK,SAAS,8VAA8V,wtDAAwtD,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACA12E,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACF;AACwB;AACgC;AACtD;AACH;AAC0C;AAEpD;AACI;AAOzC;IAA6C,2CAAiB;IAM5D,iCACU,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QAJhB,YAME,kBAAM,MAAM,CAAC,SACd;QANS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAP3C,WAAK,GAAG,oBAAoB,CAAC;QAC7B,YAAM,GAAG,EAAY,CAAC;QA2C7B,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACjF,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IAvCF,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACvD;YACC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;IAED,wCAAM,GAAN;QAAA,iBAiBC;QAhBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,eAAe,CAAC;QAC7C,IAAI,MAAM,GAAG,IAAI,qDAAM,CACrB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CACpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EACD,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CACnC,CAAC;IACJ,CAAC;IA5CU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAQuB,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAVL,uBAAuB,CAsDnC;IAAD,8BAAC;CAAA,CAtD4C,gFAAiB,GAsD7D;AAtDmC;;;;;;;;;;;;AChBpC,gKAAgK,SAAS,8VAA8V,0tDAA0tD,qBAAqB,sCAAsC,kBAAkB,mCAAmC,2BAA2B,0B;;;;;;;;;;;ACA52E,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACA;AACsB;AACgC;AACtD;AACH;AAEV;AACoD;AAChD;AAOzC;IAA8C,4CAAiB;IAM7D,kCACU,WAAwB,EACxB,IAAgB,EAChB,mBAAwC,EAChD,MAAc;QAJhB,YAME,kBAAM,MAAM,CAAC,SACd;QANS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QAChB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAP3C,WAAK,GAAG,qBAAqB,CAAC;QAC9B,aAAO,GAAG,EAAa,CAAC;QA2C/B,qBAAe,GAAqB,UAAC,OAAkB;YACrD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE/C,OAAO,KAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC;iBACjF,IAAI,CAAC,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;;IAvCF,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/B,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACvD;YACC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;IAED,yCAAM,GAAN;QAAA,iBAiBC;QAhBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,gBAAgB,CAAC;QAC9C,IAAI,OAAO,GAAG,IAAI,uDAAO,CACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CACpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EACD,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CACnC,CAAC;IACJ,CAAC;IA5CU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAQuB,0DAAW;YAClB,+DAAU;YACK,iGAAmB;YACxC,sDAAM;OAVL,wBAAwB,CAsDpC;IAAD,+BAAC;CAAA,CAtD6C,gFAAiB,GAsD9D;AAtDoC;;;;;;;;;;;;AChBrC,gKAAgK,SAAS,ukBAAukB,+CAA+C,mBAAmB,wBAAwB,oEAAoE,iBAAiB,gBAAgB,wBAAwB,yH;;;;;;;;;;;ACAv8B,+DAA+D,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACL;AAC2B;AACV;AACV;AACL;AACN;AAOzC;IAA+C,6CAAiB;IAK9D,mCACU,WAAwB,EACxB,IAAgB,EACxB,MAAc;QAHhB,YAKE,kBAAM,MAAM,CAAC,SACd;QALS,iBAAW,GAAX,WAAW,CAAa;QACxB,UAAI,GAAJ,IAAI,CAAY;QALnB,WAAK,GAAG,gCAAgC,CAAC;QACzC,eAAS,GAAG,EAAgB,CAAC;;IAQpC,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC,IAAI,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,0CAAM,GAAN;QAAA,iBAuBC;QAtBC,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,SAAS,CAAC;QACvC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAE9C,IAAM,OAAO,GAAG,KAAK,CAAC,CAAC;YACvB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;YACxC,IAAI,UAAU,GAAG,MAAe,CAAC;YACjC,sBAAsB;YACtB,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,yDAAQ,CAC/C,CAAC,CAAC,IAAI,EACN,CAAC,CAAC,WAAW,EACb,CAAC,CAAC,SAAS,EACX,CAAC,CAAC,aAAa,CAChB,EALoC,CAKpC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC,EACD,UAAC,KAAU;YACT,KAAK,CAAC,MAAM,CAAC,CAAC;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IA1CU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAOuB,0DAAW;YAClB,+DAAU;YAChB,sDAAM;OARL,yBAAyB,CA4CrC;IAAD,gCAAC;CAAA,CA5C8C,gFAAiB,GA4C/D;AA5CqC;;;;;;;;;;;;ACbtC,4GAA4G,iBAAiB,YAAY,wBAAwB,sHAAsH,sBAAsB,2Q;;;;;;;;;;;ACA7S,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAEO;AACK;AACf;AAO/C;IAKE,2BACU,KAAqB,EACrB,IAAgB,EAChB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QANjB,aAAQ,GAAG,EAAc,CAAC;QAC1B,cAAS,GAAG,KAAK,CAAC;IAMrB,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAAW;YACV,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAChD,KAAI,CAAC,QAAQ,GAAG,MAAkB,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAE3B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACzC,CAAC,CAAC,CAAC;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2CAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,GAAG,GAAG,oDAAG,CAAC,QAAQ,GAAG,oDAAG,CAAC,QAAQ,CAAC;QAEtC,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC;YACtB,EAAE,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,0CAAc,GAAd;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,CAAC;IAC1E,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAxCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOiB,8DAAc;YACf,+DAAU;YACR,sDAAM;OARb,iBAAiB,CA0C7B;IAAD,wBAAC;CAAA;AA1C6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AAEU;AACgC;AACH;AACpB;AACV;AACoC;AAC1B;AACH;AAgB/D;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAd3B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qGAAwB;gBACxB,kGAAuB;gBACvB,wGAAyB;gBACzB,8EAAiB,CAAC;YACjC,OAAO,EAAE;gBACP,4DAAY;gBACZ,oEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,0EAAc;aACf;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC1B5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;ACRpC;AAAA;AAAA;IASI,kBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,eAAe;QACpG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;IAII,oBAAmB,IAAI,EAAE,WAAW;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAMI,uBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAMI,gBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAOI,kBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,EAAE;QAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IAEL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACbD;AAAA;AAAA;IAQI,iBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW;QACnF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;AClBD;AAAA;AAAA;IAMI,iBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAMI,kBAAmB,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA,IAAY,GA2BX;AA3BD,WAAY,GAAG;IACX,qCAAqC;IACrC,mDAA4C;IAE5C,6BAAsB;IACtB,+BAAwB;IACxB,4CAAqC;IACrC,wCAAiC;IACjC,4CAAqC;IACrC,yDAAkD;IAClD,mDAA4C;IAC5C,+CAAwC;IACxC,6CAAsC;IAEtC,6BAAsB;IACtB,+BAAwB;IACxB,sCAA+B;IAC/B,6CAAsC;IACtC,2CAAoC;IACpC,wCAAiC;IAEjC,6BAAsB;IAEtB,+BAAwB;IAExB,iCAA0B;IAC1B,mDAA4C;AAChD,CAAC,EA3BW,GAAG,KAAH,GAAG,QA2Bd","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CadastroComportamentoComponent } from './elementos/cadastro-comportamento/cadastro-comportamento.component';\nimport { CadastroAlimentoComponent } from './elementos/cadastro-alimento/cadastro-alimento.component';\nimport { CadastroSintomaComponent } from './situacoes/cadastro-sintoma/cadastro-sintoma.component';\nimport { CadastroDoencaComponent } from './situacoes/cadastro-doenca/cadastro-doenca.component';\nimport { CadastroRemedioComponent } from './elementos/cadastro-remedio/cadastro-remedio.component';\nimport { CadastroComponenteComponent } from './elementos/cadastro-componente/cadastro-componente.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ConsultaComponenteComponent } from './elementos/consulta-componente/consulta-componente.component';\nimport { ConsultaElementoComponent } from './elementos/consulta-elemento/consulta-elemento.component';\nimport { ConsultaSituacaoComponent } from './situacoes/consulta-situacao/consulta-situacao.component';\nimport { ElementoComponent } from './elementos/elemento/elemento.component';\nimport { SituacaoComponent } from './situacoes/situacao/situacao.component';\nimport { ComponenteComponent } from './elementos/componente/componente.component';\nimport { EditaComportamentoComponent } from './elementos/edita-comportamento/edita-comportamento.component';\n\nconst routes: Routes = [\n  { path: 'cadastro-alimento', component: CadastroAlimentoComponent },\n  { path: 'cadastro-remedio', component: CadastroRemedioComponent },\n  { path: 'cadastro-comportamento', component: CadastroComportamentoComponent },\n  { path: 'cadastro-sintoma', component: CadastroSintomaComponent },\n  { path: 'cadastro-doenca', component: CadastroDoencaComponent },\n  { path: 'cadastro-componente', component: CadastroComponenteComponent },\n\n  { path: 'consulta-elemento', component: ConsultaElementoComponent },\n  { path: 'consulta-situacao', component: ConsultaSituacaoComponent },\n  { path: 'consulta-componente', component: ConsultaComponenteComponent },\n\n  { path: 'elemento/:nome', component: ElementoComponent },\n  { path: 'componente/:nome', component: ComponenteComponent },\n  { path: 'situacao/:nome', component: SituacaoComponent },\n\n  { path: 'edita-comportamento/:nome', component: EditaComportamentoComponent},\n\n  { path: '', component: HomePageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <app-navigation></app-navigation>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'SeiSaude-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { ElementosModule } from './elementos/elementos.module';\nimport { SituacoesModule } from './situacoes/situacoes.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormBaseModule } from './form-base/form-base.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomePageComponent } from './home-page/home-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    HomePageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ElementosModule,\n    SituacoesModule,\n    FormBaseModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n      <strong>Cadastro realizado com sucesso!</strong>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n\\n      <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n          <label for=\\\"nome\\\">Nome</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n\\n          <app-error-msg [control]=\\\"formulario.get('nomeCompleto.nome')\\\" label=\\\"Nome\\\"></app-error-msg>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"complemento\\\">Complemento</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n        </div>\\n\\n        <app-error-msg [control]=\\\"formulario.get('nomeCompleto')\\\" label=\\\"Nome\\\"></app-error-msg>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"descricao\\\">Descrição</label>\\n        <textarea class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" rows=\\\"3\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"fabricante\\\">Fabricante</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fabricante\\\" formControlName=\\\"fabricante\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"cadastradoPor\\\">Cadastrado por</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cadastradoPor\\\" formControlName=\\\"cadastradoPor\\\">\\n\\n        <app-error-msg [control]=\\\"formulario.get('cadastradoPor')\\\" label=\\\"'Cadastrado por'\\\"></app-error-msg>\\n      </div>\\n  \\n  \\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\" formArrayName=\\\"componentes\\\">\\n          <div *ngFor=\\\"let componente of formulario.get('componentes').controls; index as i\\\">\\n            <div class=\\\"card\\\" [formGroup]=\\\"componente\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">Componente\\n                  <button class=\\\"btn\\\" (click)=\\\"removeComponente(i)\\\">Remover</button>\\n                </h5>\\n                <div class=\\\"form-row\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" placeholder=\\\"Nome\\\">\\n                  <input type=\\\"number\\\" class=\\\"form-control col\\\" id=\\\"valor\\\" formControlName=\\\"valor\\\" placeholder=\\\"Valor\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control col\\\" id=\\\"unidade\\\" formControlName=\\\"unidade\\\" placeholder=\\\"Unidade\\\">\\n                </div>\\n\\n                <app-error-msg [control]=\\\"formulario.get('componentes').at(i).get('nome')\\\" label=\\\"Componente\\\"></app-error-msg>\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"addComponente()\\\" #scrollBottom>Novo componente</button>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-6\\\" formArrayName=\\\"valNutricionais\\\">\\n          <div *ngFor=\\\"let val of formulario.get('valNutricionais').controls; index as i\\\">\\n            <div class=\\\"card\\\" [formGroup]=\\\"val\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">Valor Nutricional\\n                  <button class=\\\"btn\\\" (click)=\\\"removeValNutricional(i)\\\">Remover</button>\\n                </h5>\\n                <div class=\\\"form-row\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" placeholder=\\\"Nome\\\">\\n                  <input type=\\\"number\\\" class=\\\"form-control col-md-6\\\" id=\\\"quantidade\\\" formControlName=\\\"quantidade\\\" placeholder=\\\"Quantidade\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control col-md-6\\\" id=\\\"unidade\\\" formControlName=\\\"unidade\\\" placeholder=\\\"Unidade\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"valorDiario\\\" formControlName=\\\"valorDiario\\\" placeholder=\\\"Valor diario\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">%</span>\\n                    </div>\\n                  </div>\\n\\n                  <app-error-msg [control]=\\\"formulario.get('valNutricionais').at(i).get('nome')\\\" label=\\\"Valor Nutricional\\\"></app-error-msg>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"addValNutricional()\\\" #scrollBottom>Novo valor nutricional</button>\\n        </div>\\n        \\n      </div>\\n  \\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n  \\n    <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jYWRhc3Ryby1hbGltZW50by9jYWRhc3Ryby1hbGltZW50by5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Alimento } from '../../../models/alimento';\nimport { FormBuilder, Validators, AsyncValidatorFn, FormGroup, ValidationErrors, FormArray, FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { Url } from '../../../models/url.enum';\nimport { Observable } from 'rxjs';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { map } from 'rxjs/operators';\nimport { Quantidade } from '../../../models/quantidade';\nimport { Valor } from '../../../models/valor';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastro-alimento',\n  templateUrl: './cadastro-alimento.component.html',\n  styleUrls: ['./cadastro-alimento.component.scss']\n})\nexport class CadastroAlimentoComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Cadastro de Alimento';\n  public alimento = {} as Alimento;\n  public quantidades = [] as Quantidade[];\n  public valores = [] as Valor[];\n  public success: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: [\"\", Validators.required],\n        complemento: [\"\"]\n      }, { asyncValidator: this.nomeComplemento.bind(this) }),\n      descricao: [\"\"],\n      fabricante: [\"\"],\n      cadastradoPor: [\"\", Validators.required],\n      componentes: this.buildComponentes(),\n      valNutricionais: this.buildValNutricionais()\n    });\n  }\n\n  buildComponentes() {\n    const values = this.quantidades.map(v => new FormGroup({\n      nome: new FormControl(v.nome, Validators.required),\n      unidade: new FormControl(v.unidade, Validators.required),\n      valor: new FormControl(v.valor, Validators.required)}));\n    return this.formBuilder.array(values);\n  }\n\n  buildValNutricionais() {\n    const values = this.valores.map(v => new FormGroup({\n      nome: new FormControl(\"\", Validators.required),\n      quantidade: new FormControl(\"\", Validators.required),\n      unidade: new FormControl(\"\", Validators.required),\n      valorDiario: new FormControl(\"\", Validators.required)}));\n    return this.formBuilder.array(values);\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_ALIMENTO;\n    let alimento = new Alimento(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento,\n      this.formulario.value.descricao,\n      this.formulario.value.fabricante,\n      this.formulario.value.cadastradoPor,\n      this.formulario.value.componentes,\n      this.formulario.value.valNutricionais\n    );\n\n    this.success = false;\n    this.http.post(url, alimento).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      this.formulario.reset();\n      },\n      (error: any) => console.log(error)\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNome(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n  get componentes(): FormArray { return this.formulario.get('componentes') as FormArray; }\n\n  addComponente() {\n    this.componentes.push(new FormGroup({\n      nome: new FormControl(\"\", Validators.required),\n      unidade: new FormControl(\"\", Validators.required),\n      valor: new FormControl(\"\", Validators.required)}));\n  }\n\n  removeComponente(i: number) {\n    this.componentes.removeAt(i);\n  }\n\n  get valNutricionais(): FormArray { return this.formulario.get('valNutricionais') as FormArray; }\n\n  addValNutricional() {\n    this.valNutricionais.push(new FormGroup({\n      nome: new FormControl(\"\", Validators.required),\n      quantidade: new FormControl(\"\", Validators.required),\n      unidade: new FormControl(\"\", Validators.required),\n      valorDiario: new FormControl(\"\", Validators.required)}));\n  }\n\n  removeValNutricional(i: number) {\n    this.valNutricionais.removeAt(i);\n  }\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n      <strong>Cadastro realizado com sucesso!</strong>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n      <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n        <label for=\\\"nome\\\">Nome</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n\\n        <app-error-msg [control]=\\\"formulario.get('nomeCompleto.nome')\\\" label=\\\"Nome\\\"></app-error-msg>\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"complemento\\\">Complemento</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n      </div>\\n\\n      <app-error-msg [control]=\\\"formulario.get('nomeCompleto')\\\" label=\\\"Nome\\\"></app-error-msg>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n\\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jYWRhc3Ryby1jb21wb25lbnRlL2NhZGFzdHJvLWNvbXBvbmVudGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder, Validators, AsyncValidatorFn, FormGroup, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { Componente } from '../../../models/componente';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastro-componente',\n  templateUrl: './cadastro-componente.component.html',\n  styleUrls: ['./cadastro-componente.component.scss']\n})\nexport class CadastroComponenteComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Cadastro de Componente';\n  public componente = {} as Componente;\n  public success: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: [\"\", Validators.required],\n        complemento: [\"\"]\n      }, { asyncValidator: this.nomeComplemento.bind(this) }\n    ),\n    });\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_COMPONENTE;\n    let componente = new Componente(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento\n    );\n\n    this.success = false;\n    this.http.post(url, componente).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      this.formulario.reset();\n      },\n      (error: any) => console.log(error)\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNomeComponente(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\" #formDir=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n      <strong>Cadastro realizado com sucesso!</strong>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n      <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n        <label for=\\\"nome\\\">Nome</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n\\n        <app-error-msg [control]=\\\"formulario.get('nomeCompleto.nome')\\\" label=\\\"Nome\\\"></app-error-msg>\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"complemento\\\">Complemento</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n      </div>\\n\\n      <app-error-msg [control]=\\\"formulario.get('nomeCompleto')\\\" label=\\\"Nome\\\"></app-error-msg>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"descricao\\\">Descrição</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"cadastradoPor\\\">Cadastrado por</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cadastradoPor\\\" formControlName=\\\"cadastradoPor\\\">\\n\\n      <app-error-msg [control]=\\\"formulario.get('cadastradoPor')\\\" label=\\\"'Cadastrado por'\\\"></app-error-msg>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jYWRhc3Ryby1jb21wb3J0YW1lbnRvL2NhZGFzdHJvLWNvbXBvcnRhbWVudG8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Comportamento } from '../../../models/comportamento';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder, Validators, FormControl, ValidatorFn, FormGroup, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastro-comportamento',\n  templateUrl: './cadastro-comportamento.component.html',\n  styleUrls: ['./cadastro-comportamento.component.scss']\n})\nexport class CadastroComportamentoComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Cadastro de Comportamento';\n  public comportamento = {} as Comportamento;\n  private comportamentos = [] as Comportamento[];\n  public success: boolean;\n  public nomeIndisponivel: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: [\"\", Validators.required],\n        complemento: [\"\"]\n      }, { asyncValidator: this.nomeComplemento.bind(this) }),\n      descricao: [\"\"],\n      cadastradoPor: [\"\", Validators.required]\n    });\n    this.testaHTTP();\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_COMPORTAMENTO;\n    let comportamento = new Comportamento(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento,\n      this.formulario.value.descricao,\n      this.formulario.value.cadastradoPor\n    );\n\n    this.success = false;\n    this.http.post(url, comportamento).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      this.formulario.reset();\n      },\n      (error: any) => {\n        console.log(error);\n        this.nomeIndisponivel = true;\n      }\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNome(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n  testaHTTP() {\n    let url = Url.URL_BASE + Url.TODOS_ELEMENTOS;\n    this.http.get(url).subscribe(result => {\n        let resultList = result as any[];\n        //console.log(result);\n        this.comportamentos = resultList.map(v => new Comportamento(\n          v.name,\n          v.complemento,\n          v.descricao,\n          v.cadastradoPor\n        ));\n        console.log(this.comportamentos);\n      },\n      (error: any) => alert('erro')\n    );\n  }\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n      <strong>Cadastro realizado com sucesso!</strong>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n\\n    <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n      <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n        <label for=\\\"nome\\\">Nome</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n\\n        <app-error-msg [control]=\\\"formulario.get('nomeCompleto.nome')\\\" label=\\\"Nome\\\"></app-error-msg>\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"complemento\\\">Complemento</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n      </div>\\n\\n      <app-error-msg [control]=\\\"formulario.get('nomeCompleto')\\\" label=\\\"Nome\\\"></app-error-msg>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"descricao\\\">Descrição</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"fabricante\\\">Fabricante</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fabricante\\\" formControlName=\\\"fabricante\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"cadastradoPor\\\">Cadastrado por</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cadastradoPor\\\" formControlName=\\\"cadastradoPor\\\">\\n\\n      <app-error-msg [control]=\\\"formulario.get('cadastradoPor')\\\" label=\\\"'Cadastrado por'\\\"></app-error-msg>\\n    </div>\\n\\n\\n    <div class=\\\"row\\\" formArrayName=\\\"componentes\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div *ngFor=\\\"let componente of formulario.get('componentes').controls; index as i\\\">\\n          <div class=\\\"card\\\" [formGroup]=\\\"componente\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Componente\\n                <button class=\\\"btn\\\" (click)=\\\"removeComponente(i)\\\">Remover</button>\\n              </h5>\\n              <div class=\\\"form-row\\\">\\n                \\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\" placeholder=\\\"Nome\\\" (input)=\\\"suggest(i)\\\" (focusout)=\\\"onBlur()\\\" (focus)=\\\"onFocus()\\\">\\n                <div class=\\\"\\\" *ngIf=\\\"focus()\\\">\\n                  <ul class=\\\"list-group\\\" style=\\\"position:relative\\\">\\n                    <button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\" (mousedown)=\\\"fillTextbox(i, s)\\\" *ngFor=\\\"let s of suggestions\\\">{{s}}</button>\\n                  </ul>\\n                </div>\\n\\n                <input type=\\\"number\\\" class=\\\"form-control col\\\" id=\\\"valor\\\" formControlName=\\\"valor\\\" placeholder=\\\"Valor\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control col\\\" id=\\\"unidade\\\" formControlName=\\\"unidade\\\" placeholder=\\\"Unidade\\\">\\n              </div>\\n\\n              <app-error-msg [control]=\\\"formulario.get('componentes').at(i).get('nome')\\\" label=\\\"Componente\\\"></app-error-msg>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n      \\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"addComponente()\\\" #scrollBottom>Novo componente</button>\\n\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n  \\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jYWRhc3Ryby1yZW1lZGlvL2NhZGFzdHJvLXJlbWVkaW8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder, Validators, AsyncValidatorFn, FormGroup, ValidationErrors, FormControl, FormArray } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { Remedio } from '../../../models/remedio';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Quantidade } from '../../../models/quantidade';\nimport { Router } from '@angular/router';\nimport { Componente } from '../../../models/componente';\n\n@Component({\n  selector: 'app-cadastro-remedio',\n  templateUrl: './cadastro-remedio.component.html',\n  styleUrls: ['./cadastro-remedio.component.scss']\n})\nexport class CadastroRemedioComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Cadastro de Remédio';\n  public remedio = {} as Remedio;\n  public quantidades = [] as Quantidade[];\n  public componentesBD = [] as Componente[];\n  public success: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: [\"\", Validators.required],\n        complemento: [\"\"]\n      }, { asyncValidator: this.nomeComplemento.bind(this) }),\n      descricao: [\"\"],\n      fabricante: [\"\"],\n      cadastradoPor: [\"\", Validators.required],\n      componentes: this.buildComponentes()\n    });\n\n    let url = Url.URL_BASE + Url.TODOS_COMPONENTES;\n    this.http.get(url).subscribe(result => {\n        let resultList = result as any[];\n        this.componentesBD = resultList.map(v => new Componente(\n          v.nome,\n          v.complemento\n        ));\n        console.log(this.componentesBD);\n      }\n    );\n  }\n\n  buildComponentes() {\n    const values = this.quantidades.map(v => new FormGroup({\n      nome: new FormControl(v.nome),\n      unidade: new FormControl(v.unidade),\n      valor: new FormControl(v.valor)}));\n    return this.formBuilder.array(values);\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_REMEDIO;\n    let remedio = new Remedio(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento,\n      this.formulario.value.descricao,\n      this.formulario.value.fabricante,\n      this.formulario.value.cadastradoPor,\n      this.formulario.value.componentes\n    );\n\n    this.success = false;\n    this.http.post(url, remedio).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      this.formulario.reset();\n      },\n      (error: any) => console.log(error)\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNome(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n  get componentes(): FormArray { return this.formulario.get('componentes') as FormArray; }\n\n  addComponente() {\n    this.componentes.push(new FormGroup({\n      nome: new FormControl(\"\", Validators.required),\n      unidade: new FormControl(\"\", Validators.required),\n      valor: new FormControl(\"\", Validators.required)}));\n  }\n\n  removeComponente(i: number) {\n    this.componentes.removeAt(i);\n  }\n\n  suggestions: string[] = [];\n  nomesComponentes: string[] = [];\n  componenteFocus = false;\n\n  suggest(i: number) {\n    this.nomesComponentes = this.componentesBD.map(c => this.nullToBlank(c.nome) + \" \" + this.nullToBlank(c.complemento));\n    this.suggestions = this.nomesComponentes\n      .filter(c => c.startsWith(this.formulario.get('componentes').value[i].nome))\n      .slice(0, 5);\n  }\n\n  nullToBlank(s: String) {\n    if (s == null) {\n      return \"\";\n    }\n    return s;\n  }\n\n  fillTextbox(i, string) {\n    (<FormArray>this.formulario.get('componentes')).at(i).get('nome').setValue(string);\n    this.suggestions = [];\n  }\n\n  onFocus() {\n    this.componenteFocus = true;\n  }\n\n  onBlur() {\n    this.componenteFocus = false;\n  }\n\n  focus() {\n    return this.componenteFocus && (this.suggestions.length > 0);\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"carregado\\\">\\n\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ componente.nome }}\\n      {{ componente.complemento }}\\n    </h1>\\n  </div>\\n\\n  <div style=\\\"text-align:right\\\">\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n  </div>\\n\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jb21wb25lbnRlL2NvbXBvbmVudGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Componente } from '../../../models/componente';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\n\n@Component({\n  selector: 'app-componente',\n  templateUrl: './componente.component.html',\n  styleUrls: ['./componente.component.scss']\n})\nexport class ComponenteComponent implements OnInit {\n\n  public componente = {} as Componente;\n  public carregado = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: any) => {\n        this.carregaElemento(params.nome).subscribe(result => {\n          this.componente = result as Componente;\n          console.log(this.componente);\n\n          this.carregado = this.componente != null;\n        });\n\n      }\n    );\n  }\n\n  carregaElemento(nome) {\n    let url = Url.URL_BASE + Url.CADASTRO_COMPONENTE;\n\n    const options = nome ?\n    { params: new HttpParams().set('nome', nome) } : {};\n\n    return this.http.get(url, options);\n  }\n\n  voltar() {\n    this.router.navigate(['consulta-componente']);\n  }\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-3\\\"></div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"nome\\\"></label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n      </div>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Pesquisar</button>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"list-group col-md-12\\\">\\n        <div *ngFor=\\\"let componente of componentes; index as i\\\">\\n          <a href=\\\"componente/{{ componente.nome }}{{ componente.complemento }}\\\" class=\\\"list-group-item list-group-item-action\\\">\\n            {{ componente.nome }}\\n            {{ componente.complemento }}\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jb25zdWx0YS1jb21wb25lbnRlL2NvbnN1bHRhLWNvbXBvbmVudGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Componente } from '../../../models/componente';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { FormBuilder } from '@angular/forms';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-consulta-componente',\n  templateUrl: './consulta-componente.component.html',\n  styleUrls: ['./consulta-componente.component.scss']\n})\nexport class ConsultaComponenteComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Consulta de Componentes';\n  public componentes = [] as Componente[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nome: [null]\n    });\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.COMPONENTES;\n    let termo = this.formulario.get(\"nome\").value;\n\n    const options = termo ?\n    { params: new HttpParams().set('nome', termo) } : {};\n\n    this.http.get(url, options).subscribe(result => {\n        let resultList = result as any[];\n        console.log(result);\n        this.componentes = resultList.map(v => new Componente(\n          v.nome,\n          v.complemento\n        ));\n        console.log(this.componentes);\n      },\n      (error: any) => alert('erro')\n    );\n  }\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-3\\\"></div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"nome\\\"></label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n      </div>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Pesquisar</button>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"list-group col-md-12\\\">\\n        <div *ngFor=\\\"let elemento of elementos; index as i\\\">\\n          <a href=\\\"elemento/{{ elemento.nome }}{{ elemento.complemento }}\\\" class=\\\"list-group-item list-group-item-action\\\">\\n            {{ elemento.nome }}\\n            {{ elemento.complemento }}\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9jb25zdWx0YS1lbGVtZW50by9jb25zdWx0YS1lbGVtZW50by5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { Elemento } from '../../../models/elemento';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-consulta-elemento',\n  templateUrl: './consulta-elemento.component.html',\n  styleUrls: ['./consulta-elemento.component.scss']\n})\nexport class ConsultaElementoComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Consulta de Elementos';\n  public elementos = [] as Elemento[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nome: [null]\n    });\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.ELEMENTOS;\n    let termo = this.formulario.get(\"nome\").value;\n\n    const options = termo ?\n    { params: new HttpParams().set('nome', termo) } : {};\n\n    this.http.get(url, options).subscribe(result => {\n        let resultList = result as any[];\n        //console.log(result);\n        this.elementos = resultList.map(v => new Elemento(\n          v.nome,\n          v.complemento,\n          v.descricao,\n          v.cadastradoPor,\n          v.id\n        ));\n        console.log(this.elementos);\n      },\n      (error: any) => alert('erro')\n    );\n  }\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\" #formDir=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n      <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n        <label for=\\\"nome\\\">Nome</label>\\n        <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"complemento\\\">Complemento</label>\\n        <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"descricao\\\">Descrição</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"cadastradoPor\\\">Cadastrado por</label>\\n      <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cadastradoPor\\\" formControlName=\\\"cadastradoPor\\\">\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9lZGl0YS1jb21wb3J0YW1lbnRvL2VkaXRhLWNvbXBvcnRhbWVudG8uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Comportamento } from '../../../models/comportamento';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder, Validators, FormControl, ValidatorFn, FormGroup, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-edita-comportamento',\n  templateUrl: './edita-comportamento.component.html',\n  styleUrls: ['./edita-comportamento.component.scss']\n})\nexport class EditaComportamentoComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Alteração de Comportamento';\n  public comportamento = {} as Comportamento;\n  private comportamentos = [] as Comportamento[];\n  public success: boolean;\n  public nomeIndisponivel: boolean;\n  public carregado = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: ['', Validators.required],\n        complemento: ['']\n      }, { asyncValidator: this.nomeComplemento.bind(this) }),\n      descricao: [''],\n      cadastradoPor: ['', Validators.required]\n    });\n\n    this.route.params.subscribe(\n      (params: any) => {\n        this.carregaElemento(params.nome).subscribe(result => {\n          this.comportamento = result as Comportamento;\n          console.log(this.comportamento);\n\n          this.carregado = this.comportamento != null;\n\n          this.formulario.setValue({\n            nomeCompleto: {\n              nome: this.comportamento.nome,\n              complemento: this.comportamento.complemento\n            },\n            descricao: this.comportamento.descricao,\n            cadastradoPor: this.comportamento.cadastradoPor\n          });\n        });\n\n      }\n    );\n  }\n\n  carregaElemento(nome) {\n    let url = Url.URL_BASE + Url.ELEMENTO;\n\n    const options = nome ?\n    { params: new HttpParams().set('nome', nome) } : {};\n\n    return this.http.get(url, options);\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_COMPORTAMENTO;\n    let comportamento = new Comportamento(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento,\n      this.formulario.value.descricao,\n      this.formulario.value.cadastradoPor\n    );\n\n    this.http.put(url, comportamento).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      },\n      (error: any) => {\n        console.log(error);\n        this.nomeIndisponivel = true;\n      }\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNome(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n  testaHTTP() {\n    let url = Url.URL_BASE + Url.TODOS_ELEMENTOS;\n    this.http.get(url).subscribe(result => {\n        let resultList = result as any[];\n        //console.log(result);\n        this.comportamentos = resultList.map(v => new Comportamento(\n          v.name,\n          v.complemento,\n          v.descricao,\n          v.cadastradoPor\n        ));\n        console.log(this.comportamentos);\n      },\n      (error: any) => alert('erro')\n    );\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"carregado\\\">\\n\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ elemento.nome }}\\n      {{ elemento.complemento }}\\n    </h1>\\n  </div>\\n\\n  <h2>\\n    Descrição\\n  </h2> \\n  <h3 *ngIf=\\\"!descricaoVazia()\\\">\\n      {{ elemento.descricao }}\\n  </h3>\\n  <h3 *ngIf=\\\"descricaoVazia()\\\">\\n    Esse elemento ainda não possui uma descrição.\\n  </h3>\\n\\n  <div style=\\\"text-align:right\\\">\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n  </div>\\n\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VsZW1lbnRvcy9lbGVtZW50by9lbGVtZW50by5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Elemento } from '../../../models/elemento';\nimport { Url } from '../../../models/url.enum';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-elemento',\n  templateUrl: './elemento.component.html',\n  styleUrls: ['./elemento.component.scss']\n})\nexport class ElementoComponent implements OnInit {\n\n  public elemento = {} as Elemento;\n  public carregado = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: any) => {\n        this.carregaElemento(params.nome).subscribe(result => {\n          this.elemento = result as Elemento;\n          console.log(this.elemento);\n\n          this.carregado = this.elemento != null;\n        });\n\n      }\n    );\n  }\n\n  carregaElemento(nome) {\n    let url = Url.URL_BASE + Url.ELEMENTO;\n\n    const options = nome ?\n    { params: new HttpParams().set('nome', nome) } : {};\n\n    return this.http.get(url, options);\n  }\n\n  descricaoVazia() {\n    return this.elemento.descricao == null || this.elemento.descricao == \"\";\n  }\n\n  voltar() {\n    this.router.navigate(['consulta-elemento']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CadastroComportamentoComponent } from './cadastro-comportamento/cadastro-comportamento.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { CadastroAlimentoComponent } from './cadastro-alimento/cadastro-alimento.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CadastroRemedioComponent } from './cadastro-remedio/cadastro-remedio.component';\nimport { CadastroComponenteComponent } from './cadastro-componente/cadastro-componente.component';\nimport { ConsultaComponenteComponent } from './consulta-componente/consulta-componente.component';\nimport { ConsultaElementoComponent } from './consulta-elemento/consulta-elemento.component';\nimport { ElementoComponent } from './elemento/elemento.component';\nimport { ComponenteComponent } from './componente/componente.component';\nimport { FormBaseModule } from '../form-base/form-base.module';\nimport { EditaComportamentoComponent } from './edita-comportamento/edita-comportamento.component';\n\n@NgModule({\n  declarations: [\n    CadastroComportamentoComponent,\n    CadastroAlimentoComponent,\n    CadastroRemedioComponent,\n    CadastroComponenteComponent,\n    ConsultaComponenteComponent,\n    ConsultaElementoComponent,\n    ElementoComponent,\n    ComponenteComponent,\n    EditaComportamentoComponent\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormBaseModule\n  ],\n  exports: [\n  ]\n})\nexport class ElementosModule { }\n","module.exports = \"<div *ngIf=\\\"errorMessage != null\\\" >\\n  <span class=\\\".is-invalid form-control-feedback\\\"></span>\\n  <span class=\\\".is-invalid sr-only\\\">(error)</span>\\n  <div class=\\\"alert alert-danger errorDiv\\\" role=\\\"alert\\\">\\n    {{ errorMessage }}\\n    <button *ngIf=\\\"nomeInvalido\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"bttnAlterar()\\\">Alterar</button>\\n  </div>\\n</div>\\n\\n<!--div *ngIf=\\\"statusMessage != null\\\" >\\n  <div class=\\\"alert alert-danger errorDiv\\\" role=\\\"alert\\\">\\n    {{ statusMessage }}\\n  </div>\\n</div!-->\\n\\n\"","module.exports = \".errorDiv {\\n  margin-bottom: 0px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZpbmljaXVzL2dpdC9TZWlTYXVkZS9TZWlTYXVkZS9TZWlTYXVkZS1hcHAvc3JjL2FwcC9lcnJvci1tc2cvZXJyb3ItbXNnLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQWtCLEVBQ25CIiwiZmlsZSI6InNyYy9hcHAvZXJyb3ItbXNnL2Vycm9yLW1zZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvckRpdiB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-error-msg',\n  templateUrl: './error-msg.component.html',\n  styleUrls: ['./error-msg.component.scss']\n})\nexport class ErrorMsgComponent implements OnInit {\n\n  @Input() control: FormControl;\n  @Input() label: string;\n\n  @Input() status2: string;\n\n  constructor(private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  get errorMessage() {\n\n    for (const propertyName in this.control.errors) {\n      if (this.control.errors.hasOwnProperty(propertyName) &&\n        this.control.touched) {\n          console.log(this.control.errors);\n          return ErrorMsgComponent.getErrorMsg(this.label, propertyName, this.control.errors[propertyName]);\n        }\n    }\n\n    return null;\n  }\n\n  static getErrorMsg(fieldName: string, validatorName: string, validatorValue?: any) {\n    const config = {\n      'required': `${fieldName} é obrigatório.`,\n      'nomeInvalido': `${fieldName} já está em uso. Tente adicionar ou alterar o complemento.`,\n      'minlength': `${fieldName} precisa ter no mínimo ${validatorValue.requiredLength} caracteres.`,\n      'maxlength': `${fieldName} precisa ter no máximo ${validatorValue.requiredLength} caracteres.`,\n      'pattern': 'Campo inválido'\n    };\n\n    return config[validatorName];\n  }\n\n  get statusMessage() {\n    if (this.control.status == 'PENDING') {\n      return 'Avaliando nome...'\n    }\n    else if (this.control.status == 'VALID') {\n      return 'Nome válido.'\n    }\n\n    return null;\n  }\n\n  get nomeInvalido() {\n    if (this.control.get('nome') === null) return false;\n    else return true;\n  }\n\n  bttnAlterar() {\n    this.router.navigate([`edita-comportamento/${this.control.get('nome').value}${this.control.get('complemento').value || ''}`]);\n  }\n\n}\n","module.exports = \"<p>\\n  form-base works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYmFzZS9mb3JtLWJhc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-form-base',\n  templateUrl: './form-base.component.html',\n  styleUrls: ['./form-base.component.scss']\n})\nexport abstract class FormBaseComponent implements OnInit {\n\n  formulario: FormGroup;\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  abstract submit();\n\n  onSubmit() {\n    if (this.formulario.valid) {\n      this.submit();\n    } else {\n      console.log('formulario invalido');\n      this.verificaValidacoesForm(this.formulario);\n    }\n  }\n\n  verificaValidacoesForm(formGroup: FormGroup | FormArray) {\n    Object.keys(formGroup.controls).forEach(campo => {\n      const controle = formGroup.get(campo);\n      controle.markAsDirty();\n      controle.markAsTouched();\n      if (controle instanceof FormGroup || controle instanceof FormArray) {\n        this.verificaValidacoesForm(controle);\n      }\n    });\n  }\n\n  resetar() {\n    this.formulario.reset();\n  }\n\n  verificaValidTouched(campo: string) {\n    return (\n      !this.formulario.get(campo).valid &&\n      (this.formulario.get(campo).touched || this.formulario.get(campo).dirty)\n    );\n  }\n\n  verificaRequired(campo: string) {\n    return (\n      this.formulario.get(campo).hasError('required') &&\n      (this.formulario.get(campo).touched || this.formulario.get(campo).dirty)\n    );\n  }\n\n  aplicaCssErro(campo: string) {\n    return {\n      'has-error': this.verificaValidTouched(campo),\n      'has-feedback': this.verificaValidTouched(campo)\n    };\n  }\n\n  voltar() {\n    this.formulario.reset();\n    this.router.navigate(['']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorMsgComponent } from '../error-msg/error-msg.component';\n\n@NgModule({\n  declarations: [\n    ErrorMsgComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    ErrorMsgComponent\n  ]\n})\nexport class FormBaseModule { }\n","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Bem-vindo ao Sei-Saúde!\\n  </h1>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9ob21lLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Sei-Saúde</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Consulta\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <li *ngFor=\\\"let consulta of consultas\\\">\\n              <a class=\\\"dropdown-item\\\" routerLink=\\\"{{ consulta.path }}\\\"> {{ consulta.tipo }} </a>\\n            </li>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Tratamento\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <li *ngFor=\\\"let tratamento of tratamentos\\\">\\n              <a class=\\\"dropdown-item\\\" routerLink=\\\"{{ tratamento.path }}\\\"> {{ tratamento.tipo }} </a>\\n            </li>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Cadastro\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <li *ngFor=\\\"let cadastro of cadastros\\\">\\n              <a class=\\\"dropdown-item\\\" routerLink=\\\"{{ cadastro.path }}\\\"> {{ cadastro.tipo }} </a>\\n            </li>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown/ngx-bootstrap-dropdown';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n\n  //path deve ser igual ao definido em AppRoutingModule\n  cadastros: {}[] = [{tipo: \"Comportamento\", path: \"cadastro-comportamento\"},\n                     {tipo: \"Alimento\", path: \"cadastro-alimento\"},\n                     {tipo: \"Remédio\", path: \"cadastro-remedio\"},\n                     {tipo: \"Componente\", path: \"cadastro-componente\"},\n                     {tipo: \"Sintoma\", path: \"cadastro-sintoma\"},\n                     {tipo: \"Doença\", path: \"cadastro-doenca\"},\n                     {tipo: \"Indicação\", path: \"\"},\n                     {tipo: \"Paciente\", path: \"\"}];\n\n  consultas: {}[] = [{tipo: \"Alimento - Remédio - Comportamento\", path: \"consulta-elemento\"},\n                     {tipo: \"Sintoma - Doença\", path: \"consulta-situacao\"},\n                     {tipo: \"Componente\", path: \"consulta-componente\"}];\n                     \n  tratamentos: {}[] = [{tipo: \"Novo\", path: \"\"},\n                       {tipo: \"Em andamento\", path: \"\"}];\n\n  constructor( ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { map, tap, delay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerificaNomeService {\n\n  constructor(private http: HttpClient) { }\n\n  verificarNome(nome: string, complemento: string) {\n    if (nome == null) {\n      nome = \"\";\n    }\n    if (complemento == null) {\n      complemento = \"\";\n    }\n    return this.http.get(Url.URL_BASE+Url.TODOS_ELEMENTOS)\n      .pipe(\n        delay(1000),\n        map((dados: {nome: string, complemento: string}[]) => dados.filter(v => (v.nome + v.complemento).toLowerCase().replace(/\\s/g, \"\") === (nome + complemento).toLowerCase().replace(/\\s/g, \"\"))),\n        tap(console.log),\n        map((dados: any[]) => dados.length > 0 ),\n        tap(console.log)\n      );\n  }\n\n  verificarNomeSituacao(nome: string, complemento: string) {\n    if (nome == null) {\n      nome = \"\";\n    }\n    if (complemento == null) {\n      complemento = \"\";\n    }\n    return this.http.get(Url.URL_BASE+Url.TODAS_SITUACOES)\n      .pipe(\n        delay(1000),\n        map((dados: {name: string, complemento: string}[]) => dados.filter(v => (v.name + v.complemento).toLowerCase().replace(/\\s/g, \"\") === (nome + complemento).toLowerCase().replace(/\\s/g, \"\"))),\n        tap(console.log),\n        map((dados: any[]) => dados.length > 0 ),\n        tap(console.log)\n      );\n  }\n\n  verificarNomeComponente(nome: string, complemento: string) {\n    if (nome == null) {\n      nome = \"\";\n    }\n    if (complemento == null) {\n      complemento = \"\";\n    }\n    return this.http.get(Url.URL_BASE+Url.TODOS_COMPONENTES)\n      .pipe(\n        delay(1000),\n        map((dados: {nome: string, complemento: string}[]) => dados.filter(v => (v.nome + v.complemento).toLowerCase().replace(/\\s/g, \"\") === (nome + complemento).toLowerCase().replace(/\\s/g, \"\") )),\n        tap(console.log),\n        map((dados: any[]) => dados.length > 0 ),\n        tap(console.log)\n      );\n  }\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n      <strong>Cadastro realizado com sucesso!</strong>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n      <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n        <label for=\\\"nome\\\">Nome</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n\\n        <app-error-msg [control]=\\\"formulario.get('nomeCompleto.nome')\\\" label=\\\"Nome\\\"></app-error-msg>\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"complemento\\\">Complemento</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n      </div>\\n\\n      <app-error-msg [control]=\\\"formulario.get('nomeCompleto')\\\" label=\\\"Nome\\\"></app-error-msg>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"descricao\\\">Descrição</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"cadastradoPor\\\">Cadastrado por</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cadastradoPor\\\" formControlName=\\\"cadastradoPor\\\">\\n\\n      <app-error-msg [control]=\\\"formulario.get('cadastradoPor')\\\" label=\\\"'Cadastrado por'\\\"></app-error-msg>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpdHVhY29lcy9jYWRhc3Ryby1kb2VuY2EvY2FkYXN0cm8tZG9lbmNhLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Doenca } from '../../../models/doenca';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder, Validators, AsyncValidatorFn, FormGroup, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastro-doenca',\n  templateUrl: './cadastro-doenca.component.html',\n  styleUrls: ['./cadastro-doenca.component.scss']\n})\nexport class CadastroDoencaComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Cadastro de Doença';\n  public doenca = {} as Doenca;\n  public success: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: [\"\", Validators.required],\n        complemento: [\"\"]\n      }, { asyncValidator: this.nomeComplemento.bind(this) }\n    ),\n      descricao: [\"\"],\n      cadastradoPor: [\"\", Validators.required]\n    });\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_DOENCA;\n    let doenca = new Doenca(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento,\n      this.formulario.value.descricao,\n      this.formulario.value.cadastradoPor\n    );\n\n    this.success = false;\n    this.http.post(url, doenca).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      this.formulario.reset();\n      },\n      (error: any) => console.log(error)\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNomeSituacao(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n      <strong>Cadastro realizado com sucesso!</strong>\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"form-row\\\" formGroupName=\\\"nomeCompleto\\\">\\n      <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"aplicaCssErro('nomeCompleto.nome')\\\">\\n        <label for=\\\"nome\\\">Nome</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n\\n        <app-error-msg [control]=\\\"formulario.get('nomeCompleto.nome')\\\" label=\\\"Nome\\\"></app-error-msg>\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"complemento\\\">Complemento</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"complemento\\\" formControlName=\\\"complemento\\\">\\n      </div>\\n\\n      <app-error-msg [control]=\\\"formulario.get('nomeCompleto')\\\" label=\\\"Nome\\\"></app-error-msg>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"descricao\\\">Descrição</label>\\n      <textarea class=\\\"form-control\\\" id=\\\"descricao\\\" formControlName=\\\"descricao\\\" rows=\\\"3\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"cadastradoPor\\\">Cadastrado por</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cadastradoPor\\\" formControlName=\\\"cadastradoPor\\\">\\n\\n      <app-error-msg [control]=\\\"formulario.get('cadastradoPor')\\\" label=\\\"'Cadastrado por'\\\"></app-error-msg>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Finalizar</button>\\n    </div>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n\\n  <div style=\\\"margin-top: 20px\\\" *ngIf=\\\"formulario\\\" >\\n    <div>Detalhes do form</div>\\n    <pre>Form válido: {{ formulario.status }}</pre>\\n    <!--pre>Form submetido: {{ form.submitted }}</pre -->\\n    <pre>Valores: <br>{{ formulario.value | json }}</pre>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpdHVhY29lcy9jYWRhc3Ryby1zaW50b21hL2NhZGFzdHJvLXNpbnRvbWEuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Sintoma } from '../../../models/sintoma';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { FormBuilder, Validators, AsyncValidatorFn, FormGroup, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { VerificaNomeService } from '../../services/verifica-nome/verifica-nome.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastro-sintoma',\n  templateUrl: './cadastro-sintoma.component.html',\n  styleUrls: ['./cadastro-sintoma.component.scss']\n})\nexport class CadastroSintomaComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Cadastro de Sintoma';\n  public sintoma = {} as Sintoma;\n  public success: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private verificaNomeService: VerificaNomeService,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nomeCompleto: this.formBuilder.group({\n        nome: [\"\", Validators.required],\n        complemento: [\"\"]\n      }, { asyncValidator: this.nomeComplemento.bind(this) }\n    ),\n      descricao: [\"\"],\n      cadastradoPor: [\"\", Validators.required]\n    });\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.CADASTRO_SINTOMA;\n    let sintoma = new Sintoma(\n      this.formulario.value.nomeCompleto.nome,\n      this.formulario.value.nomeCompleto.complemento,\n      this.formulario.value.descricao,\n      this.formulario.value.cadastradoPor\n    );\n\n    this.success = false;\n    this.http.post(url, sintoma).subscribe(result => {\n      console.log(result);\n      this.success = true;\n      this.formulario.reset();\n      },\n      (error: any) => console.log(error)\n    );\n  }\n\n  nomeComplemento: AsyncValidatorFn = (control: FormGroup): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    const nome = control.get('nome');\n    const complemento = control.get('complemento');\n  \n    return this.verificaNomeService.verificarNomeSituacao(nome.value, complemento.value)\n      .pipe(map(nomeExiste => nomeExiste ? { nomeInvalido: true } : null));\n  };\n\n}\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-3\\\"></div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"nome\\\"></label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nome\\\" formControlName=\\\"nome\\\">\\n      </div>\\n    </div>\\n\\n    <div style=\\\"text-align:center\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Pesquisar</button>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"list-group col-md-12\\\">\\n        <div *ngFor=\\\"let situacao of situacoes; index as i\\\">\\n          <a href=\\\"situacao/{{ situacao.nome }}{{ situacao.complemento }}\\\" class=\\\"list-group-item list-group-item-action\\\">\\n            {{ situacao.nome }}\\n            {{ situacao.complemento }}\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <router-outlet></router-outlet>\\n  </div>\\n\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpdHVhY29lcy9jb25zdWx0YS1zaXR1YWNhby9jb25zdWx0YS1zaXR1YWNhby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { FormBaseComponent } from '../../form-base/form-base.component';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Situacao } from '../../../models/situacao';\nimport { Url } from '../../../models/url.enum';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-consulta-situacao',\n  templateUrl: './consulta-situacao.component.html',\n  styleUrls: ['./consulta-situacao.component.scss']\n})\nexport class ConsultaSituacaoComponent extends FormBaseComponent implements OnInit {\n\n  public title = 'Consulta de Sintomas e Doenças';\n  public situacoes = [] as Situacao[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    router: Router\n  ) {\n    super(router);\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      nome: [null]\n    });\n  }\n\n  submit() {\n    let url = Url.URL_BASE + Url.SITUACOES;\n    let termo = this.formulario.get(\"nome\").value;\n\n    const options = termo ?\n    { params: new HttpParams().set('nome', termo) } : {};\n\n    this.http.get(url, options).subscribe(result => {\n        let resultList = result as any[];\n        //console.log(result);\n        this.situacoes = resultList.map(v => new Situacao(\n          v.name,\n          v.complemento,\n          v.descricao,\n          v.cadastradoPor\n        ));\n        console.log(this.situacoes);\n      },\n      (error: any) => {\n        alert('erro');\n        console.log(error);\n      }\n    );\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"carregado\\\">\\n\\n    <div style=\\\"text-align:center\\\">\\n      <h1>\\n        {{ situacao.name }}\\n        {{ situacao.complemento }}\\n      </h1>\\n    </div>\\n  \\n    <h2>\\n      Descrição\\n    </h2> \\n    <h3 *ngIf=\\\"!descricaoVazia()\\\">\\n        {{ situacao.descricao }}\\n    </h3>\\n    <h3 *ngIf=\\\"descricaoVazia()\\\">\\n      Essa situação ainda não possui uma descrição.\\n    </h3>\\n\\n    <div style=\\\"text-align:right\\\">\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"voltar()\\\">Voltar</button>\\n    </div>\\n  \\n  </div>\\n  \\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpdHVhY29lcy9zaXR1YWNhby9zaXR1YWNhby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Situacao } from '../../../models/situacao';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Url } from '../../../models/url.enum';\n\n@Component({\n  selector: 'app-situacao',\n  templateUrl: './situacao.component.html',\n  styleUrls: ['./situacao.component.scss']\n})\nexport class SituacaoComponent implements OnInit {\n\n  public situacao = {} as Situacao;\n  public carregado = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params: any) => {\n        this.carregaElemento(params.nome).subscribe(result => {\n          this.situacao = result as Situacao;\n          console.log(this.situacao);\n\n          this.carregado = this.situacao != null;\n        });\n\n      }\n    );\n  }\n\n  carregaElemento(nome) {\n    let url = Url.URL_BASE + Url.SITUACAO;\n\n    const options = nome ?\n    { params: new HttpParams().set('nome', nome) } : {};\n\n    return this.http.get(url, options);\n  }\n\n  descricaoVazia() {\n    return this.situacao.descricao == null || this.situacao.descricao == \"\";\n  }\n\n  voltar() {\n    this.router.navigate(['consulta-situacao']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { CadastroSintomaComponent } from './cadastro-sintoma/cadastro-sintoma.component';\nimport { CadastroDoencaComponent } from './cadastro-doenca/cadastro-doenca.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConsultaSituacaoComponent } from './consulta-situacao/consulta-situacao.component';\nimport { SituacaoComponent } from './situacao/situacao.component';\nimport { FormBaseModule } from '../form-base/form-base.module';\n\n@NgModule({\n  declarations: [CadastroSintomaComponent,\n                 CadastroDoencaComponent,\n                 ConsultaSituacaoComponent,\n                 SituacaoComponent],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormBaseModule\n  ]\n})\nexport class SituacoesModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Quantidade } from \"./quantidade\";\nimport { Valor } from \"./valor\";\n\nexport class Alimento {\n    nome: string;\n    complemento: string;\n    descricao: string;\n    fabricante: string;\n    cadastradoPor: string;\n    componentes: Quantidade[];\n    valNutricionais: Valor[];\n\n    public constructor(nome, complemento, descricao, fabricante, cadastradoPor, componentes, valNutricionais) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.fabricante = fabricante;\n        this.cadastradoPor = cadastradoPor;\n        this.componentes = componentes;\n        this.valNutricionais = valNutricionais;\n    }\n}","export class Componente {\n    nome: string;\n    complemento: string;\n\n    public constructor(nome, complemento) {\n        this.nome = nome;\n        this.complemento = complemento;\n    }\n}\n","export class Comportamento {\n    nome: string;\n    descricao: string;\n    cadastradoPor: string;\n    complemento: string;\n\n    public constructor(nome, complemento, descricao, cadastradoPor) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.cadastradoPor = cadastradoPor;\n    }\n}","export class Doenca {\n    nome: string;\n    descricao: string;\n    cadastradoPor: string;\n    complemento: string;\n\n    public constructor(nome, complemento, descricao, cadastradoPor) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.cadastradoPor = cadastradoPor;\n    }\n}","export class Elemento {\n    nome: string;\n    descricao: string;\n    cadastradoPor: string;\n    complemento: string;\n    id: number;\n\n    public constructor(nome, complemento, descricao, cadastradoPor, id) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.cadastradoPor = cadastradoPor;\n        this.id = id;\n    }\n\n}","import { Quantidade } from \"./quantidade\";\n\nexport class Remedio {\n    nome: string;\n    complemento: string;\n    descricao: string;\n    fabricante: string;\n    cadastradoPor: string;\n    componentes: Quantidade[];\n\n    public constructor(nome, complemento, descricao, fabricante, cadastradoPor, componentes) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.fabricante = fabricante;\n        this.cadastradoPor = cadastradoPor;\n        this.componentes = componentes;\n    }\n}","export class Sintoma {\n    nome: string;\n    complemento: string;\n    descricao: string;\n    cadastradoPor: string;\n\n    public constructor(nome, complemento, descricao, cadastradoPor) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.cadastradoPor = cadastradoPor;\n    }\n}","export class Situacao {\n    nome: string;\n    descricao: string;\n    cadastradoPor: string;\n    complemento: string;\n\n    public constructor(nome, complemento, descricao, cadastradoPor) {\n        this.nome = nome;\n        this.complemento = complemento;\n        this.descricao = descricao;\n        this.cadastradoPor = cadastradoPor;\n    }\n}","export enum Url {\n    //URL_BASE = \"http://localhost:8080\",\n    URL_BASE = \"https://sei-saude.herokuapp.com\",\n\n    ELEMENTO = \"/elemento\",\n    ELEMENTOS = \"/elementos\",\n    COMPONENTES = \"/elemento/componentes\",\n    TODOS_ELEMENTOS = \"/all_elemento\",\n    TODOS_COMPONENTES = \"/all_componente\",\n    CADASTRO_COMPORTAMENTO = \"/elemento/comportamento\",\n    CADASTRO_COMPONENTE = \"/elemento/componente\",\n    CADASTRO_ALIMENTO = \"/elemento/alimento\",\n    CADASTRO_REMEDIO = \"/elemento/remedio\",\n\n    SITUACAO = \"/situacao\",\n    SITUACOES = \"/situacoes\",\n    TODOS_SINTOMAS = \"/all_sintoma\",\n    CADASTRO_SINTOMA = \"/situacao/sintoma\",\n    CADASTRO_DOENCA = \"/situacao/doenca\",\n    TODAS_SITUACOES = \"/all_situacao\",\n\n    PACIENTE = \"/paciente\",\n\n    INDICACAO = \"/indicacao\",\n\n    TRATAMENTO = \"/tratamento\",\n    TRATAMENTO_PACIENTE = \"/tratamento-paciente\"\n}\n"],"sourceRoot":""}